{{- if and .Values.runner.enabled .Values.runner.statefulSet.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
{{- if .Values.runner.statefulSet.annotations }}
  annotations:
    {{ toYaml .Values.runner.statefulSet.annotations | nindent 4 }}
{{- end }}
  labels:
    {{- include "runner.labels" . | nindent 4 }}
    {{- if .Values.runner.statefulSet.labels}}
    {{ toYaml .Values.runner.statefulSet.labels | nindent 4 }}
    {{- end}}
  name: {{ template "runner.fullname" . }}
{{ include "runner.namespace" . | indent 2 }}
spec:
  serviceName: {{ template "runner.fullname" . }}-headless
  selector:
    matchLabels:
      {{- include "runner.matchLabels" . | nindent 6 }}
  replicas: {{ .Values.runner.replicaCount }}
  podManagementPolicy: {{ .Values.runner.statefulSet.podManagementPolicy }}
  template:
    metadata:
    {{- if .Values.runner.podAnnotations }}
      annotations:
        {{ toYaml .Values.runner.podAnnotations | nindent 8 }}
    {{- end }}
      labels:
        {{- include "runner.labels" . | nindent 8 }}
        {{- if .Values.runner.podLabels}}
        {{ toYaml .Values.runner.podLabels | nindent 8 }}
        {{- end}}
    spec:
{{- if .Values.runner.affinity }}
      affinity:
{{ toYaml .Values.runner.affinity | indent 8 }}
{{- end }}
{{- if .Values.runner.schedulerName }}
      schedulerName: "{{ .Values.runner.schedulerName }}"
{{- end }}
      serviceAccountName: {{ template "serviceAccountName.runner" . }}
{{- if .Values.runner.priorityClassName }}
      priorityClassName: "{{ .Values.runner.priorityClassName }}"
{{- end }}
      containers:
        - name: {{ template "name" . }}-{{ .Values.runner.name }}
          image: "{{ .Values.runner.image.repository }}:{{ .Values.runner.image.tag }}"
          imagePullPolicy: "{{ .Values.runner.image.pullPolicy }}"
          env:
            {{- range $key, $value := .Values.runner.extraEnv }}
            - name: {{ $key }}
              value: {{ $value }}
            {{- end }}
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          args:
            - --config.file=/etc/config/runner.yml
            - --storage.path={{ .Values.runner.persistentVolume.mountPath }}
          {{- range $key, $value := .Values.runner.extraArgs }}
            - --{{ $key }}={{ $value }}
          {{- end }}
          ports:
            - containerPort: 9093
          readinessProbe:
            httpGet:
              port: 9093
            initialDelaySeconds: 30
            timeoutSeconds: 30
          resources:
{{ toYaml .Values.runner.resources | indent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: /etc/config
            - name: storage-volume
              mountPath: "{{ .Values.runner.persistentVolume.mountPath }}"
              subPath: "{{ .Values.runner.persistentVolume.subPath }}"
          {{- range .Values.runner.extraSecretMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
          {{- end }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      {{ toYaml .Values.imagePullSecrets | indent 2 }}
    {{- end }}
    {{- if .Values.runner.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.runner.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.runner.securityContext }}
      securityContext:
{{ toYaml .Values.runner.securityContext | indent 8 }}
    {{- end }}
    {{- if .Values.runner.tolerations }}
      tolerations:
{{ toYaml .Values.runner.tolerations | indent 8 }}
    {{- end }}
      volumes:
        - name: config-volume
          {{- if empty .Values.runner.configFromSecret }}
          configMap:
            name: {{ if .Values.runner.configMapOverrideName }}{{ .Release.Name }}-{{ .Values.runner.configMapOverrideName }}{{- else }}{{ template "runner.fullname" . }}{{- end }}
          {{- else }}
          secret:
            secretName: {{ .Values.runner.configFromSecret }}
          {{- end }}
      {{- range .Values.runner.extraSecretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
      {{- end }}
{{- if .Values.runner.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: storage-volume
        {{- if .Values.runner.persistentVolume.annotations }}
        annotations:
{{ toYaml .Values.runner.persistentVolume.annotations | indent 10 }}
        {{- end }}
      spec:
        accessModes:
{{ toYaml .Values.runner.persistentVolume.accessModes | indent 10 }}
        resources:
          requests:
            storage: "{{ .Values.runner.persistentVolume.size }}"
      {{- if .Values.server.persistentVolume.storageClass }}
      {{- if (eq "-" .Values.server.persistentVolume.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.runner.persistentVolume.storageClass }}"
      {{- end }}
      {{- end }}
{{- else }}
        - name: storage-volume
          emptyDir:
          {{- if .Values.runner.emptyDir.sizeLimit }}
            sizeLimit: {{ .Values.runner.emptyDir.sizeLimit }}
          {{- else }}
            {}
          {{- end -}}
{{- end }}
{{- end }}
